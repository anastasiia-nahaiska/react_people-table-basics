{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeopleTable/ParentLink/ParentLink.tsx","components/PeoplePage/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/Loader/HomePage/HomePage.tsx","components/Navbar/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","ok","Error","json","Loader","className","ParentLink","parent","to","slug","classNames","sex","name","PeopleTable","people","personSlug","useParams","findParent","personName","find","person","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","loadPeople","peopleFromServer","useEffect","length","HomePage","PageNavLink","text","isActive","Navbar","role","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3556a37f.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport const getPeople = async (): Promise<Person[]> => {\n  await wait(500);\n\n  let response;\n\n  try {\n    response = await fetch(API_URL);\n\n    if (!response.ok) {\n      throw new Error('People not found');\n    }\n  } catch (error) {\n    throw new Error('Can\\'t fatch people from server');\n  }\n\n  return response.json();\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../../../types';\n\ntype Props = {\n  parent: Person;\n};\n\nexport const ParentLink: React.FC<Props> = ({ parent }) => (\n  <NavLink\n    to={`/people/${parent.slug}`}\n    className={() => classNames(\n      'link',\n      { 'has-text-danger': parent.sex === 'f' },\n    )}\n  >\n    {parent.name}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Person } from '../../../types';\nimport { ParentLink } from './ParentLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  const findParent = (personName: string | null) => {\n    const parent = people.find(person => person.name === personName);\n\n    if (parent) {\n      return (\n        <ParentLink parent={parent} />\n      );\n    }\n\n    return personName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={classNames(\n              { 'has-background-warning': person.slug === personSlug },\n            )}\n          >\n            <td>\n              <NavLink\n                to={`/people/${person.slug}`}\n                className={() => classNames(\n                  'link',\n                  { 'has-text-danger': person.sex === 'f' },\n                )}\n              >\n                {person.name}\n              </NavLink>\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{findParent(person.motherName)}</td>\n            <td>{findParent(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setHasError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading && <Loader />}\n\n      {hasError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {!hasError\n        && people.length > 0\n        && !isLoading\n        && (\n          <PeopleTable people={people} />\n        )}\n\n      {!hasError\n        && !isLoading\n        && !people.length\n        && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => (classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    ))}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/Loader/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <main className=\"section\">\n      <div className=\"container\">\n        <Navbar />\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <Routes>\n              <Route path=\"*\" element={<NotFoundPage />} />\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"/people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":personSlug\" element={<PeoplePage />} />\n              </Route>\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}